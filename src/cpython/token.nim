## * https://docs.python.org/3.10/library/token.html
import nimpy

template X(simbol): auto = nimpy.pyImport("token").simbol(x).to(type(result))
template `:=`(simbol; tipe: static[typedesc]) =
  let simbol* {.inject.}: tipe = nimpy.pyImport("token").simbol.to(tipe)

ENDMARKER := int
NAME := int
NUMBER := int
STRING := int
NEWLINE := int
INDENT := int
DEDENT := int
LPAR := int
RPAR := int
LSQB := int
RSQB := int
COLON := int
COMMA := int
SEMI := int
PLUS := int
MINUS := int
STAR := int
SLASH := int
VBAR := int
AMPER := int
LESS := int
GREATER := int
EQUAL := int
DOT := int
PERCENT := int
LBRACE := int
RBRACE := int
EQEQUAL := int
NOTEQUAL := int
LESSEQUAL := int
GREATEREQUAL := int
TILDE := int
CIRCUMFLEX := int
LEFTSHIFT := int
RIGHTSHIFT := int
DOUBLESTAR := int
PLUSEQUAL := int
MINEQUAL := int
STAREQUAL := int
SLASHEQUAL := int
PERCENTEQUAL := int
AMPEREQUAL := int
VBAREQUAL := int
CIRCUMFLEXEQUAL := int
LEFTSHIFTEQUAL := int
RIGHTSHIFTEQUAL := int
DOUBLESTAREQUAL := int
DOUBLESLASH := int
DOUBLESLASHEQUAL := int
AT := int
ATEQUAL := int
RARROW := int
ELLIPSIS := int
COLONEQUAL := int
OP := int
AWAIT := int
ASYNC := int
TYPE_IGNORE := int
TYPE_COMMENT := int
SOFT_KEYWORD := int
ERRORTOKEN := int
N_TOKENS := int
NT_OFFSET := int
COMMENT := int
NL := int
ENCODING := int

proc ISTERMINAL*(x: auto):    bool = X ISTERMINAL
proc ISNONTERMINAL*(x: auto): bool = X ISNONTERMINAL
proc ISEOF*(x: auto):         bool = X ISEOF
